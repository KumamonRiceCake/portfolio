<!DOCTYPE html>
<html>
    <head>
        <title>Jeong Won Kim Portfolio</title>
        <link rel="icon" href="/img/icon.jpg">
        <link rel="stylesheet" href="/css/styles.css">
    </head>
    <body>
        <div class="main">
            {{>header}}
            <div class="main-content">
                {{>sidemenu}}
                <div class="centered-form">
                    <div class="explanation">
                        <h4>Github Link: <a href="https://github.com/KumamonRiceCake/task-manager-api" target="_blank">https://github.com/KumamonRiceCake/task-manager-api</a></h4>
                        <h4>App on Heroku: <a href="https://kim-api-task-manager.herokuapp.com/" target="_blank">https://kim-api-task-manager.herokuapp.com/</a></h4>
                        <h3>Features</h3>
                        <p>This <b>RESTful API</b> provides a set of tools that allows users to create and manage tasks.</p>
                        <p>Data is saved by the <b>MongoDB</b> database management system.</p>
                        <p>It uses <b>SendGrid API</b> to send users an email when creating user accounts or deleting accounts.</p>
                        <p>All endpoints are fully tested using Jest and SuperTest.</p>
                        <br>
                        <h3>URL Endpoints</h3>
                        <p><b>post '/users':</b> Add a new user to the database. Name, email, and password are required.</p>
                        <p><b>post '/users/login':</b> Request user login with email and password.</p>
                        <p><b>post '/users/logout':</b> Logout user for an access token.</p>
                        <p><b>post '/users/logoutAll':</b> Logout user for all access tokens.</p>
                        <p><b>get '/users/me':</b> Get logged-in user data.</p>
                        <p><b>patch '/users/me':</b> Patch logged-in user data with the data included in the request.</p>
                        <p><b>delete '/users/me':</b> Delete logged-in user from database.</p>
                        <p><b>post '/users/me/avatar':</b> Add an avatar image file to logged-in user profile.</p>
                        <p><b>delete '/users/me/avatar':</b> Delete an avatar image file from logged-in user profile.</p>
                        <p><b>get '/users/:id/avatar':</b> Get the saved avatar image file of logged-in user profile.</p>
                        <br>
                        <p><b>post '/tasks':</b> Add a new task of a logged-in user to the database. A description is required.</p>
                        <p><b>get '/tasks':</b> Get tasks of the logged-in user. Query strings can be provided to filter and sort output data.</p>
                        <ul>- 'completed' filters completed tasks. (e.g. GET /tasks?completed=false)</ul>
                        <ul>- 'limit' and 'skip' manipulate the result shown in a page. (e.g. GET /tasks?limit=10&skip=10)</ul>
                        <ul>- 'sortBy' given with 'createdAt:desc' let the result be in descending order. (e.g. GET /tasks?sortBy=createdAt:desc or GET /tasks?sortBy=createdAt:asc)</ul>
                        <p><b>get '/tasks/:id':</b> Get a task of a logged-in user by a unique id.</p>
                        <p><b>patch '/tasks/:id':</b> Patch data of a unique id with the data included in the request for a logged-in user.</p>
                        <p><b>delete '/tasks/:id':</b> Delete a task of a unique id for a logged-in user.</p>
                        <p><b>post '/tasks/:id/image':</b> Add an image to task data of a unique id in the database for a logged-in user.</p>
                        <p><b>delete '/tasks/:id/image':</b> Delete an image from a task of a unique id in the database for a logged-in user.</p>
                        <p><b>get '/tasks/:id/image':</b> Get the saved image file of a task by a unique id.</p>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>